<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"    
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sl.dao.goodsinfo.GoodsInfoMapper">

    <!-- 查询商品列表 :分页显示-->
    <select id="getGoodsInfoList" parameterType="GoodsInfo" resultType="GoodsInfo">
          select * from goods_info
          <trim prefix="where" prefixOverrides="and | or">
               <if test="goodsName !=null"> and goodsName like concat('%',#{goodsName},'%')</if>
               <if test="state !=null"> and state=#{state}</if>
          </trim>
          order by lastUpdateTime desc limit #{starNum},#{pageSize}
    </select>
    
    <!-- 计算总记录数：用于分页 -->
    <select id="count" resultType="int" parameterType="GoodsInfo">
         select count(1) from goods_info
         <trim prefix="where" prefixOverrides="and | or">
               <if test="goodsName !=null"> and goodsName like concat('%',#{goodsName},'%')</if>
               <if test="state !=null"> and state=#{state}</if>
          </trim>
    </select>
    
    <!-- 查询商品编码是否存在 -->
    <select id="goodsSNIsExit" parameterType="GoodsInfo" resultType="int">
          select count(1) from goods_info
          <trim prefix="where" prefixOverrides="and | or">
               <if test="goodsSN !=null"> and goodsSN=#{goodsSN}</if>
               <if test="id !=null"> and id!=#{id}</if>
          </trim>
    </select>
    
    <!-- 根据id主键查询商品 -->
    <select id="getGoodsInfoById" parameterType="GoodsInfo" resultType="GoodsInfo" >
          select * from goods_info
          where id=#{id}
    </select>
    
    <!-- 在商品套餐附属表中查询是否存在商品 -->
    <select id="isExitInPack" parameterType="GoodsInfo" resultType="int" >
          select count(1) from goods_pack_affiliated
          <trim prefix="where" prefixOverrides="and | or">
               <if test="id !=null"> and goodsInfoId=#{id}</if>
          </trim>
    </select>
    
    <!-- 添加商品 -->
    <insert id="addGoodsInfo" parameterType="GoodsInfo">
         insert into goods_info(goodsSN,goodsName,marketPrice,realPrice,state,
								num,unit,goodsFormat,note,createdBy,createTime,lastUpdateTime)
					values(#{goodsSN},#{goodsName},#{marketPrice},#{realPrice},#{state},#{num},
							 #{unit},#{goodsFormat},#{note},#{createdBy},#{createTime},#{lastUpdateTime})
    </insert>
    
    <!-- 修改商品 -->
    <update id="modifyGoodsInfo" parameterType="GoodsInfo">
          update goods_info
          <trim prefix="set" suffixOverrides="," suffix="where id=#{id}">
                 <if test="goodsSN != null"> goodsSN = #{goodsSN},</if>
				 <if test="goodsName != null"> goodsName = #{goodsName},</if>
				 <if test="marketPrice != null"> marketPrice = #{marketPrice},</if>
				 <if test="realPrice != null"> realPrice = #{realPrice},</if>
				 <if test="state != null"> state = #{state},</if>
				 <if test="num != null"> num = #{num},</if>
				 <if test="unit != null"> unit = #{unit},</if>
				 <if test="goodsFormat != null"> goodsFormat = #{goodsFormat},</if>
				 <if test="note != null"> note = #{note},</if>
				 <if test="createdBy != null"> createdBy = #{createdBy},</if>
				 <if test="createTime != null"> createTime = #{createTime},</if>
				 <if test="lastUpdateTime != null"> lastUpdateTime = #{lastUpdateTime}</if>
          </trim>
    </update>

     <!-- 删除商品 -->
     <delete id="deleteGoodsInfo" parameterType="GoodsInfo">
           delete from goods_info
           where id=#{id}
     </delete>














</mapper>
